
#include <iostream>

using namespace std;

int main()
{
    setlocale(0, "");
   


    cout << "[:)] Лабиринты Минотавра" << endl << endl;
    cout << "[1] Лабиринт 15x15" << endl;
    cout << "[2] Лабиринт 20x20" << endl;
    cout << "[3] Лабиринт 30x30" << endl;
    cout << "Выберете лабиринт: ";
    short num_ma;
    cin >> num_ma;
    cout << endl;





    if (num_ma == 1) {
        /////////////////////// arr_int_15x15 /////////////////////////
        system("cls");
        int arr_int_15x15[15][15]{};

        arr_int_15x15[0][0] = 1;
        arr_int_15x15[0][1] = 1;
        arr_int_15x15[0][2] = 1;
        arr_int_15x15[0][3] = 1;
        arr_int_15x15[0][4] = 1;
        arr_int_15x15[0][5] = 1;
        arr_int_15x15[0][6] = 1;
        arr_int_15x15[0][7] = 1;
        arr_int_15x15[0][8] = 1;
        arr_int_15x15[0][9] = 1;
        arr_int_15x15[0][10] = 1;
        arr_int_15x15[0][11] = 1;
        arr_int_15x15[0][12] = 1;
        arr_int_15x15[0][13] = 1;
        arr_int_15x15[0][14] = 1;
        ///////////////////////////
        arr_int_15x15[1][0] = 1;
        arr_int_15x15[1][1] = 1;
        arr_int_15x15[1][2] = 1;
        arr_int_15x15[1][3] = 1;
        arr_int_15x15[1][4] = 1;
        arr_int_15x15[1][5] = 1;
        arr_int_15x15[1][6] = 1;
        arr_int_15x15[1][7] = 1;
        arr_int_15x15[1][8] = 1;
        arr_int_15x15[1][9] = 1;
        arr_int_15x15[1][10] = 1;
        arr_int_15x15[1][11] = 1;
        arr_int_15x15[1][12] = 1;
        arr_int_15x15[1][13] = 0;
        arr_int_15x15[1][14] = 0;
        ///////////////////////////
        arr_int_15x15[2][0] = 1;
        arr_int_15x15[2][1] = 1;
        arr_int_15x15[2][2] = 1;
        arr_int_15x15[2][3] = 1;
        arr_int_15x15[2][4] = 0;
        arr_int_15x15[2][5] = 0;
        arr_int_15x15[2][6] = 0;
        arr_int_15x15[2][7] = 1;
        arr_int_15x15[2][8] = 1;
        arr_int_15x15[2][9] = 1;
        arr_int_15x15[2][10] = 1;
        arr_int_15x15[2][11] = 1;
        arr_int_15x15[2][12] = 1;
        arr_int_15x15[2][13] = 0;
        arr_int_15x15[2][14] = 1;
        ///////////////////////////
        arr_int_15x15[3][0] = 0;
        arr_int_15x15[3][1] = 0;
        arr_int_15x15[3][2] = 1;
        arr_int_15x15[3][3] = 1;
        arr_int_15x15[3][4] = 1;
        arr_int_15x15[3][5] = 1;
        arr_int_15x15[3][6] = 0;
        arr_int_15x15[3][7] = 1;
        arr_int_15x15[3][8] = 1;
        arr_int_15x15[3][9] = 1;
        arr_int_15x15[3][10] = 1;
        arr_int_15x15[3][11] = 1;
        arr_int_15x15[3][12] = 0;
        arr_int_15x15[3][13] = 0;
        arr_int_15x15[3][14] = 1;
        ///////////////////////////
        arr_int_15x15[4][0] = 1;
        arr_int_15x15[4][1] = 0;
        arr_int_15x15[4][2] = 0;
        arr_int_15x15[4][3] = 1;
        arr_int_15x15[4][4] = 1;
        arr_int_15x15[4][5] = 1;
        arr_int_15x15[4][6] = 0;
        arr_int_15x15[4][7] = 1;
        arr_int_15x15[4][8] = 1;
        arr_int_15x15[4][9] = 1;
        arr_int_15x15[4][10] = 1;
        arr_int_15x15[4][11] = 1;
        arr_int_15x15[4][12] = 0;
        arr_int_15x15[4][13] = 1;
        arr_int_15x15[4][14] = 1;
        ///////////////////////////
        arr_int_15x15[5][0] = 1;
        arr_int_15x15[5][1] = 1;
        arr_int_15x15[5][2] = 0;
        arr_int_15x15[5][3] = 0;
        arr_int_15x15[5][4] = 1;
        arr_int_15x15[5][5] = 1;
        arr_int_15x15[5][6] = 0;
        arr_int_15x15[5][7] = 1;
        arr_int_15x15[5][8] = 1;
        arr_int_15x15[5][9] = 0;
        arr_int_15x15[5][10] = 0;
        arr_int_15x15[5][11] = 0;
        arr_int_15x15[5][12] = 0;
        arr_int_15x15[5][13] = 1;
        arr_int_15x15[5][14] = 1;
        ///////////////////////////
        arr_int_15x15[6][0] = 1;
        arr_int_15x15[6][1] = 1;
        arr_int_15x15[6][2] = 1;
        arr_int_15x15[6][3] = 0;
        arr_int_15x15[6][4] = 0;
        arr_int_15x15[6][5] = 0;
        arr_int_15x15[6][6] = 0;
        arr_int_15x15[6][7] = 1;
        arr_int_15x15[6][8] = 1;
        arr_int_15x15[6][9] = 0;
        arr_int_15x15[6][10] = 1;
        arr_int_15x15[6][11] = 1;
        arr_int_15x15[6][12] = 1;
        arr_int_15x15[6][13] = 1;
        arr_int_15x15[6][14] = 1;
        ///////////////////////////
        arr_int_15x15[7][0] = 1;
        arr_int_15x15[7][1] = 1;
        arr_int_15x15[7][2] = 1;
        arr_int_15x15[7][3] = 0;
        arr_int_15x15[7][4] = 1;
        arr_int_15x15[7][5] = 1;
        arr_int_15x15[7][6] = 1;
        arr_int_15x15[7][7] = 1;
        arr_int_15x15[7][8] = 1;
        arr_int_15x15[7][9] = 0;
        arr_int_15x15[7][10] = 1;
        arr_int_15x15[7][11] = 1;
        arr_int_15x15[7][12] = 1;
        arr_int_15x15[7][13] = 1;
        arr_int_15x15[7][14] = 1;
        ///////////////////////////
        arr_int_15x15[8][0] = 1;
        arr_int_15x15[8][1] = 0;
        arr_int_15x15[8][2] = 0;
        arr_int_15x15[8][3] = 0;
        arr_int_15x15[8][4] = 1;
        arr_int_15x15[8][5] = 1;
        arr_int_15x15[8][6] = 1;
        arr_int_15x15[8][7] = 1;
        arr_int_15x15[8][8] = 1;
        arr_int_15x15[8][9] = 0;
        arr_int_15x15[8][10] = 1;
        arr_int_15x15[8][11] = 1;
        arr_int_15x15[8][12] = 1;
        arr_int_15x15[8][13] = 1;
        arr_int_15x15[8][14] = 1;
        ///////////////////////////
        arr_int_15x15[9][0] = 1;
        arr_int_15x15[9][1] = 0;
        arr_int_15x15[9][2] = 1;
        arr_int_15x15[9][3] = 1;
        arr_int_15x15[9][4] = 1;
        arr_int_15x15[9][5] = 1;
        arr_int_15x15[9][6] = 0;
        arr_int_15x15[9][7] = 0;
        arr_int_15x15[9][8] = 0;
        arr_int_15x15[9][9] = 0;
        arr_int_15x15[9][10] = 1;
        arr_int_15x15[9][11] = 1;
        arr_int_15x15[9][12] = 1;
        arr_int_15x15[9][13] = 1;
        arr_int_15x15[9][14] = 1;
        ///////////////////////////
        arr_int_15x15[10][0] = 1;
        arr_int_15x15[10][1] = 0;
        arr_int_15x15[10][2] = 1;
        arr_int_15x15[10][3] = 1;
        arr_int_15x15[10][4] = 1;
        arr_int_15x15[10][5] = 1;
        arr_int_15x15[10][6] = 0;
        arr_int_15x15[10][7] = 1;
        arr_int_15x15[10][8] = 1;
        arr_int_15x15[10][9] = 1;
        arr_int_15x15[10][10] = 1;
        arr_int_15x15[10][11] = 1;
        arr_int_15x15[10][12] = 1;
        arr_int_15x15[10][13] = 1;
        arr_int_15x15[10][14] = 1;
        ///////////////////////////
        arr_int_15x15[11][0] = 1;
        arr_int_15x15[11][1] = 0;
        arr_int_15x15[11][2] = 0;
        arr_int_15x15[11][3] = 0;
        arr_int_15x15[11][4] = 0;
        arr_int_15x15[11][5] = 0;
        arr_int_15x15[11][6] = 0;
        arr_int_15x15[11][7] = 1;
        arr_int_15x15[11][8] = 1;
        arr_int_15x15[11][9] = 1;
        arr_int_15x15[11][10] = 1;
        arr_int_15x15[11][11] = 1;
        arr_int_15x15[11][12] = 1;
        arr_int_15x15[11][13] = 1;
        arr_int_15x15[11][14] = 1;
        ///////////////////////////
        arr_int_15x15[12][0] = 1;
        arr_int_15x15[12][1] = 1;
        arr_int_15x15[12][2] = 1;
        arr_int_15x15[12][3] = 1;
        arr_int_15x15[12][4] = 0;
        arr_int_15x15[12][5] = 1;
        arr_int_15x15[12][6] = 1;
        arr_int_15x15[12][7] = 1;
        arr_int_15x15[12][8] = 1;
        arr_int_15x15[12][9] = 1;
        arr_int_15x15[12][10] = 1;
        arr_int_15x15[12][11] = 1;
        arr_int_15x15[12][12] = 1;
        arr_int_15x15[12][13] = 1;
        arr_int_15x15[12][14] = 1;
        ///////////////////////////
        arr_int_15x15[13][0] = 1;
        arr_int_15x15[13][1] = 1;
        arr_int_15x15[13][2] = 0;
        arr_int_15x15[13][3] = 0;
        arr_int_15x15[13][4] = 0;
        arr_int_15x15[13][5] = 1;
        arr_int_15x15[13][6] = 1;
        arr_int_15x15[13][7] = 1;
        arr_int_15x15[13][8] = 1;
        arr_int_15x15[13][9] = 1;
        arr_int_15x15[13][10] = 1;
        arr_int_15x15[13][11] = 1;
        arr_int_15x15[13][12] = 1;
        arr_int_15x15[13][13] = 1;
        arr_int_15x15[13][14] = 1;
        ///////////////////////////
        arr_int_15x15[14][0] = 1;
        arr_int_15x15[14][1] = 1;
        arr_int_15x15[14][2] = 1;
        arr_int_15x15[14][3] = 1;
        arr_int_15x15[14][4] = 1;
        arr_int_15x15[14][5] = 1;
        arr_int_15x15[14][6] = 1;
        arr_int_15x15[14][7] = 1;
        arr_int_15x15[14][8] = 1;
        arr_int_15x15[14][9] = 1;
        arr_int_15x15[14][10] = 1;
        arr_int_15x15[14][11] = 1;
        arr_int_15x15[14][12] = 1;
        arr_int_15x15[14][13] = 1;
        arr_int_15x15[14][14] = 1;


        cout << "Лабиринт 20x20" << endl << endl << endl;
        for (short y = 0; y < 15; y++) {
            for (short x = 0; x < 15; x++) {
                if (arr_int_15x15[y][x] == 1) {

                    cout << "# ";
                }
                else {
                    cout << "  ";
                }
            }
            cout << endl;
        }

    }
    else if (num_ma == 2) {
        system("cls");

        ///////////////////////// arr_int_20x20 /////////////////////////


        int arr_int_20x20[20][20]{ {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1},
                                  {1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1},
                                  {1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                                  {1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},
                                  {1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1},
                                  {1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1},
                                  {1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1},
                                  {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
                                  {1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1},
                                  {1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1} };


        cout << "Лабиринт 20x20" << endl << endl << endl;

        for (short y = 0; y < 20; y++) {
            for (short x = 0; x < 20; x++) {
                if (arr_int_20x20[y][x] == 1) {

                    cout << "# ";
                }
                else {
                    cout << "  ";
                }
            }
            cout << endl;
        }
    }
    else if (num_ma == 3) {
        system("cls");

        int arr_int_30x30[30][30]{ {1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1},
                                  {1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1},
                                  {1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0},
                                  {1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1},
                                  {1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1},
                                  {1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1},
                                  {1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1},
                                  {1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1},
                                  {1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
                                  {1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1},
                                  {1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1},
                                  {1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1},
                                  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1} };


        cout << "Лабиринт 30x30" << endl << endl << endl;

        for (short y = 0; y < 30; y++) {
            for (short x = 0; x < 30; x++) {
                if (arr_int_30x30[y][x] == 1) {

                    cout << "# ";
                }
                else {
                    cout << "  ";
                }
            }
            cout << endl;
        }

    }
    else {
        cout << "Такого лабиринта нет!!!";
    }



    return 0;
    int _; cin >> _;
}
